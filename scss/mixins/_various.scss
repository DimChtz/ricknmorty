/**
 * Removes unit from value
 */
@function strip-units($number) {
	@return $number / ($number * 0 + 1);
}

/**
 * Converts to rem values
 */
@function rem($target, $context: $root-font-size) {
	@return strip-units($target / $context) * 1rem;
}

/**
 * Set placeholder color to inputs
 * Usage:
 * element{
 *   @placeholder-color(#cccccc)
 * }
 */
@mixin placeholder-color($color) {
	/* Chrome/Opera/Safari */
	&::-webkit-input-placeholder {
		color: $color;
	}

	/* Firefox 19+ */
	&::-moz-placeholder {
		color: $color;
	}

	/* IE 10+ */
	&:-ms-input-placeholder {
		color: $color;
	}

	/* Firefox 18- */
	&:-moz-placeholder {
		color: $color;
	}

	::placeholder {
		color: $color;
	}
}

/**
 * Truncates the text
 * Usage:
 * @include ellipsis-text();
 */
@mixin ellipsis-text() {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

/**
 * Implementing font-size with rem units and pixel fallback.
 */
@mixin font-size($size, $base: $root-font-size) {
	font-size: $size; // fallback for old browsers
	font-size: ($size / $base) * 1rem;
}

/**
 * A powerful shorthand for media queries
 */
@mixin screen($size, $type: min) {
	@if map-has-key($breakpoints, $size) {
		@media screen and (#{$type}-width: map-get($breakpoints, $size)) {
			@content;
		}
	} @else if is-em($size) {
		@media screen and (#{$type}-width: $size) {
			@content;
		}
	} @else {
		@content;
	}
}
